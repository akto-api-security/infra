version: '3.3'

services:
  zoo1:
    image: confluentinc/cp-zookeeper:6.2.1
    restart: on-failure:10
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka1:
    image: confluentinc/cp-kafka:6.2.1
    restart: on-failure:10
    hostname: kafka1
    user: "appuser:appuser"
    ports:
      - "19092:19092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CREATE_TOPICS: "akto.api.logs:3:3"
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 60000
      KAFKA_LOG_RETENTION_HOURS: 5
      KAFKA_LOG_SEGMENT_BYTES: 104857600
      KAFKA_LOG_CLEANER_ENABLE: "true"
      KAFKA_CLEANUP_POLICY: "delete"
      KAFKA_LOG_RETENTION_BYTES: 10737418240      
    depends_on:
      - zoo1

  mongo:
    container_name: mongo
    image: mongo
    restart: on-failure:10
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"

  akto-api-security-dashboard:
    image: aktosecurity/akto-api-security-dashboard:bhavik
    env_file: ./docker.env
    restart: always
    ports: 
      - "8080:8080"
    depends_on:
      - mongo

  akto-api-security-runtime:
    image: aktosecurity/akto-api-security-runtime:latest
    env_file: ./docker.env
    restart: always
    depends_on:
      - kafka1
    
  akto-api-security-testing:
    image: aktosecurity/akto-api-testing:bhavik
    env_file: ./docker.env
    depends_on:
      - mongo    
    restart: always

    
